<?xml version="1.0" encoding="UTF-8" ?>  
		<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		<mapper namespace="com.krm.dbaudit.web.model.mapper.ModelSubjectMapper">

	<sql id="modelSubjectColumns">
		id,property,buz_line,name,sort,parent_Id,description,create_date,update_by,update_date,srot,DEL_FLAG
	</sql>

	<sql id="aliasModelSubjectColumns">
		b.id,b.property,b.buz_line,b.name,b.sort,b.parent_Id,b.description,b.create_date,b.update_by,b.update_date,b.srot,b.DEL_FLAG
	</sql>

	<!-- 根据节点Id删除底下全部子节点包括孙子节点 -->
	<update id="deleteSubjectByRootId">
		delete from model_subject  where id in (select id from model_subject start with id = #{id} connect by PRIOR id = parent_id)
	</update>
	
	
	<update id="updateBuzLineByRootId">
		update model_subject set buz_line = #{1} where id in(select id from model_subject start with id = #{0} connect by PRIOR id = parent_id)
	</update>
	
	<select id="findById" resultType="com.krm.dbaudit.web.model.model.ModelSubject">
		select  <include refid="aliasModelSubjectColumns" /> ,p.name as propertyName ,d.label as lineName,b2.name as parentName
		    from model_subject  b 
	       left join model_buz_property p on b.property = p.id 
	       left join  sys_dict d on d.type = 'model_buz_line' and d.value = b.buz_line
	       left join model_subject b2 on b2.id = b.parent_id
	    <where>
	    	b.id = #{id}
	    </where>   
	</select>

	<select id="findPageInfo" resultType="com.krm.dbaudit.web.model.model.ModelSubject">
		select  <include refid="aliasModelSubjectColumns" /> ,p.name as propertyName ,d.label as lineName,b2.name as parentName
		    from model_subject  b 
	       left join model_buz_property p on b.property = p.id 
	       left join  sys_dict d on d.type = 'model_buz_line' and d.value = b.buz_line
	       left join model_subject b2 on b2.id = b.parent_id
		<where>
			b.del_flag = 0
			 <if test="@Ognl@isNotBlank(property)">
			    and b.property =  #{property}
			 </if>
			 <if test="@Ognl@isNotBlank(buzLine)">
			    and b.buz_line like '%' || #{buzLine} ||'%' 
			 </if>
			 <if test="@Ognl@isNotBlank(name)">
			    and b.name like '%' || #{name} ||'%' 
			 </if>
			 <if test="@Ognl@isNotBlank(sort)">
			    and b.sort =  #{sort}
			 </if>
			 <if test="@Ognl@isNotBlank(parentId)">
			    and b.parent_Id =  #{parentId}
			 </if>
			 <if test="@Ognl@isNotBlank(description)">
			    and b.description like '%' || #{description} ||'%' 
			 </if>
			 <if test="@Ognl@isNotBlank(srot)">
			    and b.srot =  #{srot}
			 </if>
		</where>
		<if test="id != 0 and @Ognl@isBlank(name) and @Ognl@isNotBlank(id) "> 
			START WITH b.id=#{id} CONNECT BY PRIOR b.ID = b.parent_id
		</if>
		
		<if test="@Ognl@isNotBlank(sortC) and @Ognl@isNotBlank(order)"> 
			ORDER BY b.${sortC}   ${order}
		</if>
	</select>
</mapper>